#ifndef __Queue_H
#define __Queue_H


#include <stdio.h>
#include "stm32f4xx.h"
#include "stm32f4xx_it.h"
#include "rt_heap.h"
#include "stdlib.h"


//#include <malloc.h>

/* ??: ????????(??rear)??????,?????(??front)??????????
 * ?????????  ?????????   ???????????
 */

/*=====???????????========
 *
 *  ?? ----------------- ??
 *   <--- a1,a2,a3,...,an <---
 *      -----------------
 *
 *================================*/

typedef enum
{
    OK=0, //??
    ERR=1,   //??
    TRUE=2,  //??
    FALSE=3   //??
}status;

typedef int ElemType;   //??????????
#define MAX_SIZE 20

/*???????????????????
 *????????????????????*/
// ????????????
typedef struct
{
    ElemType *pBase;    //????
    int front;      //????
    int rear;       //????
    int maxSize;    //?????????
}queue;

//????? queueCapacity-????
status initQueue(queue *PQueue,int queueCapacity);
//????
void destroyQueue(queue *PQueue);
//????
void clearQueue(queue *PQueue);
//????????
status isEmpityQueue(queue *PQueue);
//????????
status isFullQueue(queue *PQueue);
//??????
int getQueueLen(queue *PQueue);
//????? [??????:????????] element-?????
status enQueue(queue *PQueue,ElemType element);
//?????,????????? [??????:????????]
status deQueue(queue *PQueue,ElemType *pElement);
//????
void queueTraverse(queue *PQueue);

void queueSum(queue *PQueue, u32 *sum);
#endif
